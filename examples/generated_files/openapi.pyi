from __future__ import annotations
from typing import Any, Dict, List, Optional, Union
from schema2type import SchemaBasedObject, Reference

class APIKeySecurityScheme(SchemaBasedObject):
    type: str = ...
    name: str = ...
    in_: str = ...
    description: Optional[str] = ...

    # noinspection PyMissingConstructor
    def __init__(self, type: str, name: str, in_: str, description: Optional[str] = None, **kwargs): ...

    def __getitem__(self, item) -> Union[Any]: ...

class AuthorizationCodeOAuthFlow(SchemaBasedObject):
    authorizationUrl: str = ...
    tokenUrl: str = ...
    refreshUrl: Optional[str] = ...
    scopes: Optional[Dict[str, str]] = ...

    # noinspection PyMissingConstructor
    def __init__(self, authorizationUrl: str, tokenUrl: str, refreshUrl: Optional[str] = None, scopes: Optional[Dict[str, str]] = None, **kwargs): ...

    def __getitem__(self, item) -> Union[Any]: ...

class ClientCredentialsFlow(SchemaBasedObject):
    tokenUrl: str = ...
    refreshUrl: Optional[str] = ...
    scopes: Optional[Dict[str, str]] = ...

    # noinspection PyMissingConstructor
    def __init__(self, tokenUrl: str, refreshUrl: Optional[str] = None, scopes: Optional[Dict[str, str]] = None, **kwargs): ...

    def __getitem__(self, item) -> Union[Any]: ...

class Components(SchemaBasedObject):
    schemas: Optional[Dict[str, Union[Union[Schema, Reference]]]] = ...
    responses: Optional[Dict[str, Union[Union[Reference, Response]]]] = ...
    parameters: Optional[Dict[str, Union[Union[Reference, Parameter]]]] = ...
    examples: Optional[Dict[str, Union[Union[Reference, Example]]]] = ...
    requestBodies: Optional[Dict[str, Union[Union[Reference, RequestBody]]]] = ...
    headers: Optional[Dict[str, Union[Union[Reference, Header]]]] = ...
    securitySchemes: Optional[Dict[str, Union[Union[Reference, Union[APIKeySecurityScheme, HTTPSecurityScheme, OAuth2SecurityScheme, OpenIdConnectSecurityScheme]]]]] = ...
    links: Optional[Dict[str, Union[Union[Reference, Link]]]] = ...
    callbacks: Optional[Dict[str, Union[Union[Reference, Dict[str, Union[Any]]]]]] = ...

    # noinspection PyMissingConstructor
    def __init__(self, schemas: Optional[Dict[str, Union[Union[Schema, Reference]]]] = None, responses: Optional[Dict[str, Union[Union[Reference, Response]]]] = None, parameters: Optional[Dict[str, Union[Union[Reference, Parameter]]]] = None, examples: Optional[Dict[str, Union[Union[Reference, Example]]]] = None, requestBodies: Optional[Dict[str, Union[Union[Reference, RequestBody]]]] = None, headers: Optional[Dict[str, Union[Union[Reference, Header]]]] = None, securitySchemes: Optional[Dict[str, Union[Union[Reference, Union[APIKeySecurityScheme, HTTPSecurityScheme, OAuth2SecurityScheme, OpenIdConnectSecurityScheme]]]]] = None, links: Optional[Dict[str, Union[Union[Reference, Link]]]] = None, callbacks: Optional[Dict[str, Union[Union[Reference, Dict[str, Union[Any]]]]]] = None, **kwargs): ...

    def __getitem__(self, item) -> Union[Any]: ...

class Contact(SchemaBasedObject):
    name: Optional[str] = ...
    url: Optional[str] = ...
    email: Optional[str] = ...

    # noinspection PyMissingConstructor
    def __init__(self, name: Optional[str] = None, url: Optional[str] = None, email: Optional[str] = None, **kwargs): ...

    def __getitem__(self, item) -> Union[Any]: ...

class Discriminator(SchemaBasedObject):
    propertyName: str = ...
    mapping: Optional[Dict[str, str]] = ...

    # noinspection PyMissingConstructor
    def __init__(self, propertyName: str, mapping: Optional[Dict[str, str]] = None, **kwargs): ...

class Encoding(SchemaBasedObject):
    contentType: Optional[str] = ...
    headers: Optional[Dict[str, Any]] = ...
    style: Optional[str] = ...
    explode: Optional[bool] = ...
    allowReserved: Optional[bool] = ...

    # noinspection PyMissingConstructor
    def __init__(self, contentType: Optional[str] = None, headers: Optional[Dict[str, Any]] = None, style: Optional[str] = None, explode: Optional[bool] = None, allowReserved: Optional[bool] = None): ...

class Example(SchemaBasedObject):
    summary: Optional[str] = ...
    description: Optional[str] = ...
    value: Optional[Any] = ...
    externalValue: Optional[str] = ...

    # noinspection PyMissingConstructor
    def __init__(self, summary: Optional[str] = None, description: Optional[str] = None, value: Optional[Any] = None, externalValue: Optional[str] = None, **kwargs): ...

    def __getitem__(self, item) -> Union[Any]: ...

class ExternalDocumentation(SchemaBasedObject):
    description: Optional[str] = ...
    url: str = ...

    # noinspection PyMissingConstructor
    def __init__(self, url: str, description: Optional[str] = None, **kwargs): ...

    def __getitem__(self, item) -> Union[Any]: ...

class HTTPSecurityScheme(SchemaBasedObject):
    scheme: str = ...
    bearerFormat: Optional[str] = ...
    description: Optional[str] = ...
    type: str = ...

    # noinspection PyMissingConstructor
    def __init__(self, scheme: str, type: str, bearerFormat: Optional[str] = None, description: Optional[str] = None, **kwargs): ...

    def __getitem__(self, item) -> Union[Any]: ...

class Header(SchemaBasedObject):
    description: Optional[str] = ...
    required: Optional[bool] = ...
    deprecated: Optional[bool] = ...
    allowEmptyValue: Optional[bool] = ...
    style: Optional[str] = ...
    explode: Optional[bool] = ...
    allowReserved: Optional[bool] = ...
    schema: Optional[Union[Schema, Reference]] = ...
    content: Optional[Dict[str, MediaType]] = ...
    example: Optional[Any] = ...
    examples: Optional[Dict[str, Union[Example, Reference]]] = ...

    # noinspection PyMissingConstructor
    def __init__(self, description: Optional[str] = None, required: Optional[bool] = None, deprecated: Optional[bool] = None, allowEmptyValue: Optional[bool] = None, style: Optional[str] = None, explode: Optional[bool] = None, allowReserved: Optional[bool] = None, schema: Optional[Union[Schema, Reference]] = None, content: Optional[Dict[str, MediaType]] = None, example: Optional[Any] = None, examples: Optional[Dict[str, Union[Example, Reference]]] = None, **kwargs): ...

    def __getitem__(self, item) -> Union[Any]: ...

class ImplicitOAuthFlow(SchemaBasedObject):
    authorizationUrl: str = ...
    refreshUrl: Optional[str] = ...
    scopes: Dict[str, str] = ...

    # noinspection PyMissingConstructor
    def __init__(self, authorizationUrl: str, scopes: Dict[str, str], refreshUrl: Optional[str] = None, **kwargs): ...

    def __getitem__(self, item) -> Union[Any]: ...

class Info(SchemaBasedObject):
    title: str = ...
    description: Optional[str] = ...
    termsOfService: Optional[str] = ...
    contact: Optional[Contact] = ...
    license: Optional[License] = ...
    version: str = ...

    # noinspection PyMissingConstructor
    def __init__(self, title: str, version: str, description: Optional[str] = None, termsOfService: Optional[str] = None, contact: Optional[Contact] = None, license: Optional[License] = None, **kwargs): ...

    def __getitem__(self, item) -> Union[Any]: ...

class License(SchemaBasedObject):
    name: str = ...
    url: Optional[str] = ...

    # noinspection PyMissingConstructor
    def __init__(self, name: str, url: Optional[str] = None, **kwargs): ...

    def __getitem__(self, item) -> Union[Any]: ...

class Link(SchemaBasedObject):
    operationId: Optional[str] = ...
    operationRef: Optional[str] = ...
    parameters: Optional[Dict[str, Any]] = ...
    requestBody: Optional[Any] = ...
    description: Optional[str] = ...
    server: Optional[Server] = ...

    # noinspection PyMissingConstructor
    def __init__(self, operationId: Optional[str] = None, operationRef: Optional[str] = None, parameters: Optional[Dict[str, Any]] = None, requestBody: Optional[Any] = None, description: Optional[str] = None, server: Optional[Server] = None, **kwargs): ...

    def __getitem__(self, item) -> Union[Any]: ...

class MediaType(SchemaBasedObject):
    schema: Optional[Union[Schema, Reference]] = ...
    example: Optional[Any] = ...
    examples: Optional[Dict[str, Union[Example, Reference]]] = ...
    encoding: Optional[Dict[str, Encoding]] = ...

    # noinspection PyMissingConstructor
    def __init__(self, schema: Optional[Union[Schema, Reference]] = None, example: Optional[Any] = None, examples: Optional[Dict[str, Union[Example, Reference]]] = None, encoding: Optional[Dict[str, Encoding]] = None, **kwargs): ...

    def __getitem__(self, item) -> Union[Any]: ...

class OAuth2SecurityScheme(SchemaBasedObject):
    type: str = ...
    flows: OAuthFlows = ...
    description: Optional[str] = ...

    # noinspection PyMissingConstructor
    def __init__(self, type: str, flows: OAuthFlows, description: Optional[str] = None, **kwargs): ...

    def __getitem__(self, item) -> Union[Any]: ...

class OAuthFlows(SchemaBasedObject):
    implicit: Optional[ImplicitOAuthFlow] = ...
    password: Optional[PasswordOAuthFlow] = ...
    clientCredentials: Optional[ClientCredentialsFlow] = ...
    authorizationCode: Optional[AuthorizationCodeOAuthFlow] = ...

    # noinspection PyMissingConstructor
    def __init__(self, implicit: Optional[ImplicitOAuthFlow] = None, password: Optional[PasswordOAuthFlow] = None, clientCredentials: Optional[ClientCredentialsFlow] = None, authorizationCode: Optional[AuthorizationCodeOAuthFlow] = None, **kwargs): ...

    def __getitem__(self, item) -> Union[Any]: ...

class OpenIdConnectSecurityScheme(SchemaBasedObject):
    type: str = ...
    openIdConnectUrl: str = ...
    description: Optional[str] = ...

    # noinspection PyMissingConstructor
    def __init__(self, type: str, openIdConnectUrl: str, description: Optional[str] = None, **kwargs): ...

    def __getitem__(self, item) -> Union[Any]: ...

class Operation(SchemaBasedObject):
    tags: Optional[List[str]] = ...
    summary: Optional[str] = ...
    description: Optional[str] = ...
    externalDocs: Optional[ExternalDocumentation] = ...
    operationId: Optional[str] = ...
    parameters: Optional[List[Union[Parameter, Reference]]] = ...
    requestBody: Optional[Union[RequestBody, Reference]] = ...
    responses: Responses = ...
    callbacks: Optional[Dict[str, Union[Dict[str, Union[Any]], Reference]]] = ...
    deprecated: Optional[bool] = ...
    security: Optional[List[Dict[str, List[str]]]] = ...
    servers: Optional[List[Server]] = ...

    # noinspection PyMissingConstructor
    def __init__(self, responses: Responses, tags: Optional[List[str]] = None, summary: Optional[str] = None, description: Optional[str] = None, externalDocs: Optional[ExternalDocumentation] = None, operationId: Optional[str] = None, parameters: Optional[List[Union[Parameter, Reference]]] = None, requestBody: Optional[Union[RequestBody, Reference]] = None, callbacks: Optional[Dict[str, Union[Dict[str, Union[Any]], Reference]]] = None, deprecated: Optional[bool] = None, security: Optional[List[Dict[str, List[str]]]] = None, servers: Optional[List[Server]] = None, **kwargs): ...

    def __getitem__(self, item) -> Union[Any]: ...

class Parameter(SchemaBasedObject):
    name: str = ...
    in_: str = ...
    description: Optional[str] = ...
    required: Optional[bool] = ...
    deprecated: Optional[bool] = ...
    allowEmptyValue: Optional[bool] = ...
    style: Optional[str] = ...
    explode: Optional[bool] = ...
    allowReserved: Optional[bool] = ...
    schema: Optional[Union[Schema, Reference]] = ...
    content: Optional[Dict[str, MediaType]] = ...
    example: Optional[Any] = ...
    examples: Optional[Dict[str, Union[Example, Reference]]] = ...

    # noinspection PyMissingConstructor
    def __init__(self, name: str, in_: str, description: Optional[str] = None, required: Optional[bool] = None, deprecated: Optional[bool] = None, allowEmptyValue: Optional[bool] = None, style: Optional[str] = None, explode: Optional[bool] = None, allowReserved: Optional[bool] = None, schema: Optional[Union[Schema, Reference]] = None, content: Optional[Dict[str, MediaType]] = None, example: Optional[Any] = None, examples: Optional[Dict[str, Union[Example, Reference]]] = None, **kwargs): ...

    def __getitem__(self, item) -> Union[Any]: ...

class PasswordOAuthFlow(SchemaBasedObject):
    tokenUrl: str = ...
    refreshUrl: Optional[str] = ...
    scopes: Optional[Dict[str, str]] = ...

    # noinspection PyMissingConstructor
    def __init__(self, tokenUrl: str, refreshUrl: Optional[str] = None, scopes: Optional[Dict[str, str]] = None, **kwargs): ...

    def __getitem__(self, item) -> Union[Any]: ...

class PathItem(SchemaBasedObject):
    dollar_ref: Optional[str] = ...
    summary: Optional[str] = ...
    description: Optional[str] = ...
    servers: Optional[List[Server]] = ...
    parameters: Optional[List[Union[Parameter, Reference]]] = ...

    # noinspection PyMissingConstructor
    def __init__(self, dollar_ref: Optional[str] = None, summary: Optional[str] = None, description: Optional[str] = None, servers: Optional[List[Server]] = None, parameters: Optional[List[Union[Parameter, Reference]]] = None, **kwargs): ...

    def __getitem__(self, item) -> Union[Operation, Any]: ...

class RequestBody(SchemaBasedObject):
    description: Optional[str] = ...
    content: Dict[str, MediaType] = ...
    required: Optional[bool] = ...

    # noinspection PyMissingConstructor
    def __init__(self, content: Dict[str, MediaType], description: Optional[str] = None, required: Optional[bool] = None, **kwargs): ...

    def __getitem__(self, item) -> Union[Any]: ...

class Response(SchemaBasedObject):
    description: str = ...
    headers: Optional[Dict[str, Union[Header, Reference]]] = ...
    content: Optional[Dict[str, MediaType]] = ...
    links: Optional[Dict[str, Union[Link, Reference]]] = ...

    # noinspection PyMissingConstructor
    def __init__(self, description: str, headers: Optional[Dict[str, Union[Header, Reference]]] = None, content: Optional[Dict[str, MediaType]] = None, links: Optional[Dict[str, Union[Link, Reference]]] = None, **kwargs): ...

    def __getitem__(self, item) -> Union[Any]: ...

class Responses(SchemaBasedObject):
    default: Optional[Union[Response, Reference]] = ...

    # noinspection PyMissingConstructor
    def __init__(self, default: Optional[Union[Response, Reference]] = None, **kwargs): ...

    def __getitem__(self, item) -> Union[Union[Response, Reference], Any]: ...

class RootObject(SchemaBasedObject):
    openapi: str = ...
    info: Info = ...
    externalDocs: Optional[ExternalDocumentation] = ...
    servers: Optional[List[Server]] = ...
    security: Optional[List[Dict[str, List[str]]]] = ...
    tags: Optional[List[Tag]] = ...
    paths: Dict[str, Union[PathItem, Any]] = ...
    components: Optional[Components] = ...

    # noinspection PyMissingConstructor
    def __init__(self, openapi: str, info: Info, paths: Dict[str, Union[PathItem, Any]], externalDocs: Optional[ExternalDocumentation] = None, servers: Optional[List[Server]] = None, security: Optional[List[Dict[str, List[str]]]] = None, tags: Optional[List[Tag]] = None, components: Optional[Components] = None, **kwargs): ...

    def __getitem__(self, item) -> Union[Any]: ...

class Schema(SchemaBasedObject):
    title: Optional[str] = ...
    multipleOf: Optional[float] = ...
    maximum: Optional[float] = ...
    exclusiveMaximum: Optional[bool] = ...
    minimum: Optional[float] = ...
    exclusiveMinimum: Optional[bool] = ...
    maxLength: Optional[int] = ...
    minLength: Optional[int] = ...
    pattern: Optional[str] = ...
    maxItems: Optional[int] = ...
    minItems: Optional[int] = ...
    uniqueItems: Optional[bool] = ...
    maxProperties: Optional[int] = ...
    minProperties: Optional[int] = ...
    required: Optional[List[str]] = ...
    enum: Optional[List[Any]] = ...
    type: Optional[str] = ...
    not_: Optional[Any] = ...
    allOf: Optional[List[Union[Any, Reference]]] = ...
    oneOf: Optional[List[Union[Schema, Reference]]] = ...
    anyOf: Optional[List[Union[Schema, Reference]]] = ...
    items: Optional[Union[Schema, Reference]] = ...
    properties: Optional[Dict[str, Union[Schema, Reference]]] = ...
    additionalProperties: Optional[Union[Schema, Reference, bool]] = ...
    description: Optional[str] = ...
    format: Optional[str] = ...
    default: Optional[Any] = ...
    nullable: Optional[bool] = ...
    discriminator: Optional[Discriminator] = ...
    readOnly: Optional[bool] = ...
    writeOnly: Optional[bool] = ...
    example: Optional[Any] = ...
    externalDocs: Optional[ExternalDocumentation] = ...
    deprecated: Optional[bool] = ...
    xml: Optional[XML] = ...

    # noinspection PyMissingConstructor
    def __init__(self, title: Optional[str] = None, multipleOf: Optional[float] = None, maximum: Optional[float] = None, exclusiveMaximum: Optional[bool] = None, minimum: Optional[float] = None, exclusiveMinimum: Optional[bool] = None, maxLength: Optional[int] = None, minLength: Optional[int] = None, pattern: Optional[str] = None, maxItems: Optional[int] = None, minItems: Optional[int] = None, uniqueItems: Optional[bool] = None, maxProperties: Optional[int] = None, minProperties: Optional[int] = None, required: Optional[List[str]] = None, enum: Optional[List[Any]] = None, type: Optional[str] = None, not_: Optional[Any] = None, allOf: Optional[List[Union[Any, Reference]]] = None, oneOf: Optional[List[Union[Schema, Reference]]] = None, anyOf: Optional[List[Union[Schema, Reference]]] = None, items: Optional[Union[Schema, Reference]] = None, properties: Optional[Dict[str, Union[Schema, Reference]]] = None, additionalProperties: Optional[Union[Schema, Reference, bool]] = None, description: Optional[str] = None, format: Optional[str] = None, default: Optional[Any] = None, nullable: Optional[bool] = None, discriminator: Optional[Discriminator] = None, readOnly: Optional[bool] = None, writeOnly: Optional[bool] = None, example: Optional[Any] = None, externalDocs: Optional[ExternalDocumentation] = None, deprecated: Optional[bool] = None, xml: Optional[XML] = None, **kwargs): ...

    def __getitem__(self, item) -> Union[Any]: ...

class Server(SchemaBasedObject):
    url: str = ...
    description: Optional[str] = ...
    variables: Optional[Dict[str, ServerVariable]] = ...

    # noinspection PyMissingConstructor
    def __init__(self, url: str, description: Optional[str] = None, variables: Optional[Dict[str, ServerVariable]] = None, **kwargs): ...

    def __getitem__(self, item) -> Union[Any]: ...

class ServerVariable(SchemaBasedObject):
    enum: Optional[List[str]] = ...
    default: str = ...
    description: Optional[str] = ...

    # noinspection PyMissingConstructor
    def __init__(self, default: str, enum: Optional[List[str]] = None, description: Optional[str] = None, **kwargs): ...

    def __getitem__(self, item) -> Union[Any]: ...

class Tag(SchemaBasedObject):
    name: str = ...
    description: Optional[str] = ...
    externalDocs: Optional[ExternalDocumentation] = ...

    # noinspection PyMissingConstructor
    def __init__(self, name: str, description: Optional[str] = None, externalDocs: Optional[ExternalDocumentation] = None, **kwargs): ...

    def __getitem__(self, item) -> Union[Any]: ...

class XML(SchemaBasedObject):
    name: Optional[str] = ...
    namespace: Optional[str] = ...
    prefix: Optional[str] = ...
    attribute: Optional[bool] = ...
    wrapped: Optional[bool] = ...

    # noinspection PyMissingConstructor
    def __init__(self, name: Optional[str] = None, namespace: Optional[str] = None, prefix: Optional[str] = None, attribute: Optional[bool] = None, wrapped: Optional[bool] = None, **kwargs): ...

    def __getitem__(self, item) -> Union[Any]: ...

